<?xml version="1.0"?>


<bindings id="snowlTreeBindings"
          xmlns="http://www.mozilla.org/xbl"
          xmlns:xbl="http://www.mozilla.org/xbl"
          xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
  
  <binding id="tree" extends="chrome://browser/content/places/tree.xml#places-tree">
    <implementation>

      <!-- Selection on right click, may be different than currentIndex -->
      <field name="_currentSelectedIndex">-1</field>
      <property name="currentSelectedIndex"
                onget="return this._currentSelectedIndex;"
                onset="return this._currentSelectedIndex = val;"/>
      <!-- Selection count, used to track selected items on container toggles -->
      <field name="_currentSelectionCount">0</field>
      <property name="currentSelectionCount"
                onget="return this._currentSelectionCount;"
                onset="return this._currentSelectionCount = val;"/>

      <method name="restoreSelection">
        <parameter name="items"/>
        <body><![CDATA[
          let strArray = [], intArray = [], itemIds = [];
          if (items)
            itemIds = items;
          else {
            strArray = this.getAttribute("itemids").split(",");
            for each (let intg in strArray)
              intArray.push(parseInt(intg));
            itemIds = intArray;
          }
//CollectionsView._log.info("restoreSelection: itemIds - "+itemIds);
          this.selectItems(itemIds);
//CollectionsView._log.info("restoreSelection: count - "+this.view.selection.count);
          if (itemIds == -1)
            return;
          this.boxObject.ensureRowIsVisible(this.currentIndex)
          ]]></body>
      </method>

    </implementation>

    <handlers>
      <!-- Fix focus; if currentIndex == -1 check if there's a selection..
      <handler event="focus"> <![CDATA[
        if (this.view.selection.count > 0 &&
           !this.view.selection.isSelected(this.currentIndex)) {
          this.currentIndex = this.treeBoxObject.getFirstVisibleRow();
      ]]></handler> -->

      <!-- The system collections folder (default View) is necessarily readOnly,
           however we want to allow user ordering of custom View shorcuts within
           the default View.  Do a check and unset readOnly; reset on dragend. -->
      <handler event="dragstart"><![CDATA[
        let rootNodeId = this.getResultNode().itemId;
        if (rootNodeId == SnowlPlaces.collectionsSystemID &&
            this.selectedNode.parent.itemId == SnowlPlaces.collectionsSystemID &&
            this.selectedNode.itemId != SnowlPlaces.collectionsSourcesID &&
            this.selectedNode.itemId != SnowlPlaces.collectionsAuthorsID &&
            this.selectedNode.itemId != SnowlPlaces.collectionsAllID)
          PlacesUtils.bookmarks.setFolderReadonly(rootNodeId, false);
      ]]></handler>

      <!-- Restore tree selection on drag end -->
      <handler event="dragend"><![CDATA[
        SnowlUtils.gMouseEvent = false;
        let rootNodeId = this.getResultNode().itemId;
        if (rootNodeId == SnowlPlaces.collectionsSystemID)
          PlacesUtils.bookmarks.setFolderReadonly(rootNodeId, true);
        this.restoreSelection();
      ]]></handler>
    </handlers>
  </binding>

</bindings>
